# Generated by Django 2.2 on 2020-10-04 10:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'student'), (2, 'teacher'), (3, 'admin')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Course_Name', models.CharField(max_length=150, unique=True)),
                ('Course_Id', models.CharField(max_length=150, unique=True)),
                ('credit_hours', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dept_Name', models.CharField(max_length=150)),
                ('courses', models.ManyToManyField(to='dashboard.Course')),
            ],
            options={
                'verbose_name': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Name', models.CharField(max_length=150)),
                ('photo', models.ImageField(upload_to='static')),
                ('Date_of_birth', models.DateField(blank=True, null=True)),
                ('Designation', models.CharField(max_length=150)),
                ('mobileNo', models.CharField(blank=True, max_length=11, null=True)),
                ('Email', models.CharField(blank=True, max_length=255, null=True)),
                ('joining_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Teacher',
            },
            bases=('dashboard.users',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TimetableDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.CharField(choices=[('8:30 - 9:20', '8:30 - 9:20'), ('9:20 - 10:10', '9:20 - 10:10'), ('10:10 - 11:00', '10:10 - 11:00'), ('11:00 - 11:50', '11:00 - 11:50'), ('11:50 - 12:40', '11:50 - 12:40'), ('12:40 - 1:30', '12:40 - 1:30')], max_length=20, null=True)),
                ('Day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=20, null=True)),
                ('Course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CTimetable', to='dashboard.Course')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeaTimetable', to='dashboard.Teacher')),
            ],
            options={
                'verbose_name': 'TimetableDetail',
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(auto_now_add=True, null=True)),
                ('Day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=20, null=True)),
                ('Details', models.ManyToManyField(to='dashboard.TimetableDetails')),
            ],
            options={
                'verbose_name': 'Timetable',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Semester', models.PositiveIntegerField(null=True)),
                ('Course', models.ManyToManyField(to='dashboard.Course')),
                ('Department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SemesterDep', to='dashboard.Department')),
            ],
            options={
                'verbose_name': 'Semester',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='Department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CourseDep', to='dashboard.Department'),
        ),
        migrations.CreateModel(
            name='Attendence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Absent'), (2, 'Present')], null=True)),
                ('Date', models.DateField(auto_now_add=True, null=True)),
                ('Course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CAttendence', to='dashboard.Course')),
            ],
            options={
                'verbose_name': 'Attendence',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='Attendence',
            field=models.ManyToManyField(null=True, related_name='TeacherAtt', to='dashboard.Attendence'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='Courses',
            field=models.ManyToManyField(to='dashboard.Course'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='Department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeacherDep', to='dashboard.Department'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='Semester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeacherSem', to='dashboard.Semester'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to='static')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('RegistrationNo', models.CharField(max_length=16, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=11, null=True)),
                ('guardian_mobile', models.CharField(blank=True, max_length=11, null=True)),
                ('Section', models.CharField(max_length=16)),
                ('Attendence', models.ManyToManyField(null=True, related_name='StdAtt', to='dashboard.Attendence')),
                ('Courses', models.ManyToManyField(related_name='StdCourses', to='dashboard.Course')),
                ('Department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StudentDep', to='dashboard.Department')),
                ('Semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StudentSem', to='dashboard.Semester')),
            ],
            options={
                'verbose_name': 'Student',
            },
            bases=('dashboard.users',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='Faculty',
            field=models.ManyToManyField(to='dashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='department',
            name='HOD',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='HOD', to='dashboard.Teacher'),
        ),
        migrations.AddField(
            model_name='attendence',
            name='student',
            field=models.ManyToManyField(null=True, related_name='StdAtt', to='dashboard.Student'),
        ),
        migrations.AddField(
            model_name='attendence',
            name='teacher',
            field=models.ManyToManyField(null=True, related_name='TeaAtt', to='dashboard.Teacher'),
        ),
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Section', models.CharField(max_length=10, null=True)),
                ('Assignments', models.CharField(max_length=1000, null=True)),
                ('files', models.FileField(upload_to='')),
                ('Course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CAssignments', to='dashboard.Course')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeaAssignments', to='dashboard.Teacher')),
            ],
            options={
                'verbose_name': 'Assignments',
            },
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Section', models.CharField(max_length=10, null=True)),
                ('texts', models.CharField(max_length=1000, null=True)),
                ('Course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CAnnouncement', to='dashboard.Course')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TeaAnnouncement', to='dashboard.Teacher')),
            ],
            options={
                'verbose_name': 'Announcement',
            },
        ),
    ]
